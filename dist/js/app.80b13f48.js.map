{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/views/experiments.scss?0b89","webpack:///./src/plugins/bootstrap-vue.js","webpack:///./src/App.vue?4c17","webpack:///./src/App.vue?bff9","webpack:///./src/views/experiments.html","webpack:///src/views/experiments.vue","webpack:///./src/views/experiments.vue?87ee","webpack:///./src/views/experiments.vue","webpack:///./src/views/dev/dev.html","webpack:///src/views/dev/dev.vue","webpack:///./src/views/dev/dev.vue?b001","webpack:///./src/views/dev/dev.vue","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/views/dev/dev.scss?e383"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Vue","use","BootstrapVue","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","staticRenderFns","script","component","on","resetData","_s","startTime","elapsedTime","tableFields","audioItems","scopedSlots","_u","fn","item","staticStyle","speechConfig","speechRecognitionLanguage","padding0","num","String","components","props","thStyle","formatter","getHours","getMinutes","getSeconds","computed","stTime","getFullYear","getMonth","ela","hour","min","sec","mounted","connectLocalAudio","connectRecieveAudio","addEventListener","e","repeat","_this","vcmdMode","destroyed","disconectDevice","methods","localAudioWriting","recieveAudioWriting","localSourceNode","disconnect","recieveSourceNode","localRecognizer","stopContinuousRecognitionAsync","recieveRecognizer","recordingsource","recordingsourceRecieve","writeText","idx","jaText","text","confirmText","finTime","Date","translator","scroll","audio","video","navigator","mediaDevices","getUserMedia","constraints","getDisplayMedia","startRecording","recordingData","audioContext","createMediaStreamSource","stream","connect","scriptProcessor","onaudioprocess","bufferData","input","destination","startRecordingRecieve","recordingDataRecieve","downloadRecording","downloadLink","href","myURL","createObjectURL","audioBlob","download","click","createWAV","drawWave","draw","analyserNode","getByteTimeDomainData","array","drawContext","fillStyle","fillRect","canvas","width","height","barWidth","offset","requestAnimationFrame","fftSize","setRecognizerOption","recognizer","recognizing","recognized","reason","canceled","console","log","sessionStopped","encodeWAV","view","setUint8","string","charCodeAt","output","setInt16","writeString","setUint32","samples","setUint16","sampleRate","floatTo16BitPCM","mergeBuffers","sampleLength","audioData","sampleIdx","cutSamples","stSecond","lag","finSecond","targetSamples","Float32Array","baseSamples","set","container","scrollTop","scrollHeight","_e","vcmd","vcmdMsg","correctRatio","onRowSelected","directives","rawName","expression","domProps","Array","isArray","correctflg","_i","$event","$$a","$$el","target","$$c","checked","$$v","$$i","$set","concat","correct","connectWebsocket","selectedAudioItems","items","ws","WebSocket","onmessage","send","buffer","title","csvDownload","content","header","join","forEach","cArray","URL","blob","audioDownload","location","comment","routes","path","experiments","dev","router","base","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.80b13f48.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([8,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./experiments.scss?vue&type=style&index=0&id=3fbf34f0&scoped=true&lang=scss&\"","import Vue from 'vue'\r\n\r\nimport BootstrapVue from 'bootstrap-vue'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\r\n\r\nVue.use(BootstrapVue)\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('h2',{staticClass:\"text-left pl-3 mb-3 mt-1\"},[_vm._v(\" 音声翻訳webシステム \")]),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=d19b7ace&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{staticClass:\"experiments\",attrs:{\"fluid\":\"\"}},[_c('b-row',{attrs:{\"align-h\":\"between\"}},[_c('b-col',{staticClass:\"text-left\"},[_c('a',{attrs:{\"id\":\"download\"}}),_c('b-button',{staticClass:\"ml-3\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.resetData}},[_vm._v(\"リセット\")])],1),_c('b-col',[_c('div',{staticClass:\"text-right\"},[_vm._v(_vm._s(_vm.startTime))]),_c('div',{staticClass:\"text-right\"},[_vm._v(\"経過時間：\"+_vm._s(_vm.elapsedTime))])])],1),_c('b-table',{attrs:{\"sticky-header\":\"78vh\",\"no-border-collapse\":\"\",\"fixed\":\"\",\"fields\":_vm.tableFields,\"items\":_vm.audioItems},scopedSlots:_vm._u([{key:\"cell(jaText)\",fn:function(data){return [(data.item.localflg)?_c('div',[_c('div',{staticClass:\"float-right\",staticStyle:{\"margin-left\":\"60%\"}},[_vm._v(_vm._s(data.value))])]):_c('div',[_c('div',{staticClass:\"float-left\",staticStyle:{\"margin-right\":\"60%\"}},[_vm._v(_vm._s(data.value))])])]}},{key:\"cell(localflg)\",fn:function(data){return [(data.item.localflg)?_c('div',[_c('div',{staticClass:\"local-device\"},[_vm._v(_vm._s(data.value))])]):_c('div',[_c('div',{staticClass:\"receive-device\"},[_vm._v(_vm._s(data.value))])])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template src=\"./experiments.html\"></template>\r\n<style src=\"./experiments.scss\" scoped lang=\"scss\"></style>\r\n<script>\r\n// tsだと、getUserMediaがコンパイルエラーになるので、jsにする\r\nimport * as speechSdk from \"microsoft-cognitiveservices-speech-sdk\";\r\n// const speechSKey = \"5a6a3d13e6a34959bc9e7122a20f52bb\"; // asahikasei\r\nconst speechSKey = \"55bb3e290b3d4405abdc1e3cae706eab\"; // DX1AG\r\nconst speechConfig = speechSdk.SpeechConfig.fromSubscription(speechSKey, \"japaneast\");\r\nspeechConfig.speechRecognitionLanguage = \"ja-jp\";\r\n// speechConfig.speechRecognitionLanguage = \"en-us\";\r\n\r\n// 翻訳用config\r\nimport axios from 'axios';\r\nimport {v4 as uuidv4} from 'uuid';\r\n// const transSKey = \"eb87360816204677a17423ccef781f8c\"; // asahikasei\r\nconst transSKey = \"d145a64af1614123a0cadb03589d4766\"; // DX1AG\r\nconst endpoint = \"https://api.cognitive.microsofttranslator.com/\";\r\nconst location = \"japaneast\";\r\nlet localSourceNode\r\nlet recieveSourceNode\r\nlet localRecognizer\r\nlet recieveRecognizer\r\n\r\n// 音声をwavで録音\r\nlet recordingData = [];\r\nlet recordingStartTime\r\nlet recordingsource\r\nlet recordingDataRecieve = [];\r\nlet recordingStartTimeRecieve\r\nlet recordingsourceRecieve\r\n// bufferSizeを大きくするほどぶつ切り感が出ない\r\nconst bufferSize = 4096;\r\nconst sampleRate = 16000;\r\n\r\n// 数字の0埋め(2桁)\r\nfunction padding0(num){\r\n  if(num > 10**1){\r\n    return String(num)\r\n  }else{\r\n    return ( '00' + num ).slice( -2 )\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'Experiments',\r\n  components: {\r\n  },\r\n  props: [],\r\n  data:() => ({\r\n    tableFields:[\r\n      {key: 'localflg',label: 'デバイス',\r\n        thStyle:\"width: 10%;\",\r\n        formatter: value => {\r\n          return value? \"マイク\":\"スピーカー\"\r\n        }\r\n      },\r\n      {key: 'stTime',label: '時間',\r\n        thStyle:\"width: 10%;\",\r\n        formatter: value => {\r\n          return padding0(value.getHours()) + \":\" + padding0(value.getMinutes()) + \":\" + padding0(value.getSeconds())\r\n        }\r\n      },\r\n      {key: 'jaText',label: '本文',\r\n        thStyle:\"width: 50%;\"\r\n      },\r\n      {key: 'enText',label: '翻訳',\r\n        thStyle:\"width: 30%;\"\r\n      }\r\n    ],\r\n    audioItems:[],\r\n    localAudioWriting:false,\r\n    recieveAudioWriting:false,\r\n    vcmdMode:false\r\n  }),\r\n  computed: {\r\n    startTime: function(){\r\n      let stTime = new Date()\r\n      if(this.audioItems.length > 0){\r\n        stTime = this.audioItems[0].stTime\r\n      }\r\n      return stTime.getFullYear() + \"/\" + padding0(stTime.getMonth()+1) +\"/\" + padding0(stTime.getDate())\r\n    },\r\n    elapsedTime: function(){\r\n      let ela = \"00:00:00\"\r\n      if(this.audioItems.length > 0){\r\n        const stTime = this.audioItems[0].stTime\r\n        const now = new Date()\r\n        const diff = now.getTime() - stTime.getTime()\r\n        const hour =  Math.floor(diff/(60*60*1000))\r\n        const min = Math.floor(diff/(60*1000) - hour*60)\r\n        const sec = Math.floor(diff/1000 - hour*60*60 - min*60)\r\n        ela = padding0(hour) + \":\" + padding0(min) + \":\" + padding0(sec)\r\n      }\r\n      return ela\r\n    }\r\n  },\r\n  mounted () {\r\n    // getLocalDevices()\r\n    this.connectLocalAudio()\r\n    this.connectRecieveAudio()\r\n    const _this = this\r\n\r\n    window.addEventListener('keydown', function(e) {\r\n      // escキー\r\n      if (!e.repeat && e.key === \"Insert\") {\r\n        _this.vcmdMode = true\r\n      }\r\n    });\r\n    window.addEventListener('keyup', function(e) {\r\n      // escキー\r\n      if (e.key === \"Insert\") {\r\n        _this.vcmdMode = false\r\n      }\r\n    });\r\n  },\r\n  destroyed (){\r\n    this.disconectDevice()\r\n  },\r\n  methods: {\r\n    resetData(){\r\n      this.audioItems = []\r\n      this.localAudioWriting = false\r\n      this.recieveAudioWriting = false\r\n      this.vcmdMode = false\r\n    },\r\n    disconectDevice(){\r\n      if(localSourceNode){\r\n        localSourceNode.disconnect()\r\n      }\r\n      if(recieveSourceNode){\r\n        recieveSourceNode.disconnect()\r\n      }\r\n      if(localRecognizer){\r\n        localRecognizer.stopContinuousRecognitionAsync()\r\n      }\r\n      if(recieveRecognizer){\r\n        recieveRecognizer.stopContinuousRecognitionAsync()\r\n      }\r\n      if(recordingsource){\r\n        recordingsource.disconnect()\r\n      }\r\n      if(recordingsourceRecieve){\r\n        recordingsourceRecieve.disconnect()\r\n      }\r\n    },\r\n    // 値書き換え\r\n    writeText(text,localflg){\r\n      if(localflg){\r\n        if(!this.localAudioWriting){\r\n          // 確定直後なので新しく\r\n          this.audioItems.push({jaText:text,enText:\"\",localflg:localflg,stTime:new Date(),finTime:null})\r\n          this.localAudioWriting = true\r\n        }else{\r\n          // 更新中なので最新を\r\n          const idx = this.audioItems.map(el=>el.localflg).lastIndexOf(localflg)\r\n          this.audioItems[idx].jaText = text\r\n        }\r\n      }else{\r\n        if(!this.recieveAudioWriting){\r\n          // 確定直後なので新しく\r\n          this.audioItems.push({jaText:text,enText:\"\",localflg:localflg,stTime:new Date(),finTime:null})\r\n          this.recieveAudioWriting = true\r\n        }else{\r\n          // 更新中なので最新を\r\n          const idx = this.audioItems.map(el=>el.localflg).lastIndexOf(localflg)\r\n          this.audioItems[idx].jaText = text\r\n        }\r\n      }\r\n    },\r\n    confirmText(text,localflg){\r\n      const idx = this.audioItems.map(el=>el.localflg).lastIndexOf(localflg)\r\n      this.audioItems[idx].jaText = text\r\n      this.audioItems[idx].finTime = new Date()\r\n      this.translator(text,idx)\r\n      if(localflg){\r\n        this.localAudioWriting = false\r\n      }else{\r\n        this.recieveAudioWriting = false\r\n      }\r\n      this.scroll()\r\n    },\r\n    // 動作\r\n    // メイン動作\r\n    // マイクの音声を拾う\r\n    connectLocalAudio () {\r\n      const _this = this\r\n      // const canvas = document.getElementById(\"localCanvas\")\r\n      const constraints = {\r\n        audio: true,\r\n        video: false\r\n      }\r\n      navigator.mediaDevices.getUserMedia(constraints)\r\n        .then(stream => {\r\n          // 波形描画\r\n          // _this.drawWave(stream.clone(),canvas,true)\r\n          // 音声録音\r\n          // _this.startRecording(stream.clone())\r\n          // 音声認識\r\n          const audioConfig = speechSdk.AudioConfig.fromStreamInput(stream);\r\n          // 音をそのままテキスト化\r\n          localRecognizer = new speechSdk.SpeechRecognizer(speechConfig, audioConfig);\r\n          _this.setRecognizerOption(localRecognizer,true);\r\n          localRecognizer.startContinuousRecognitionAsync();\r\n          \r\n        }).catch(error => {\r\n          console.error('mediaDevice.getUserMedia() error:', error)\r\n        })\r\n    },\r\n\r\n    // PC上の音声を拾う\r\n    connectRecieveAudio () {\r\n      const _this = this\r\n      // const canvas = document.getElementById(\"recieveCanvas\")\r\n      const constraints = {\r\n        audio: true,\r\n        video: true\r\n      }\r\n      navigator.mediaDevices.getDisplayMedia(constraints)\r\n        .then(stream => {\r\n          // _this.drawWave(stream.clone(),canvas,false)\r\n          // 音声録音\r\n          // _this.startRecordingRecieve(stream.clone())\r\n          const audioConfig = speechSdk.AudioConfig.fromStreamInput(stream);\r\n          recieveRecognizer = new speechSdk.SpeechRecognizer(speechConfig, audioConfig);\r\n          _this.setRecognizerOption(recieveRecognizer,false);\r\n          recieveRecognizer.startContinuousRecognitionAsync();\r\n        }).catch(error => {\r\n          console.error('mediaDevice.getUserMedia() error:', error)\r\n          alert('音声共有を許可した上で、全画面共有してください')\r\n          _this.connectRecieveAudio()\r\n        })\r\n    },\r\n\r\n    // 翻訳\r\n    translator(text,idx){\r\n      const _this = this\r\n      axios({\r\n          baseURL: endpoint,\r\n          url: '/translate',\r\n          method: 'post',\r\n          headers: {\r\n              'Ocp-Apim-Subscription-Key': transSKey,\r\n              'Ocp-Apim-Subscription-Region': location,\r\n              'Content-type': 'application/json',\r\n              'X-ClientTraceId': uuidv4().toString()\r\n          },\r\n          params: {\r\n              'api-version': '3.0',\r\n              'from': 'ja',\r\n              'to': 'en'\r\n              // 'from': 'en',\r\n              //  'to': 'ja'\r\n          },\r\n          data: [{\r\n              'text': text\r\n          }],\r\n          responseType: 'json'\r\n      }).then(function(response){\r\n          const result = response.data[0].translations[0].text\r\n          if(_this.audioItems[idx]){\r\n            _this.audioItems[idx].enText = result\r\n          }\r\n      })\r\n    },\r\n    // 録音開始\r\n    startRecording(stream){\r\n      recordingData = []\r\n      const audioContext = new AudioContext({sampleRate:sampleRate});\r\n      const scriptProcessor = audioContext.createScriptProcessor(bufferSize, 1, 1);\r\n      recordingsource = audioContext.createMediaStreamSource(stream);\r\n      recordingsource.connect(scriptProcessor);\r\n      scriptProcessor.onaudioprocess = function(e) {\r\n        if(recordingData.length == 0){\r\n          recordingStartTime = new Date()\r\n        }\r\n        const input = e.inputBuffer.getChannelData(0);\r\n        const bufferData = new Float32Array(bufferSize);\r\n        for (let i = 0; i < bufferSize; i++) {\r\n          bufferData[i] = input[i];\r\n        }\r\n        recordingData.push(bufferData);\r\n      };\r\n      scriptProcessor.connect(audioContext.destination);\r\n    },\r\n    // 録音開始\r\n    startRecordingRecieve(stream){\r\n      recordingDataRecieve = []\r\n      const audioContext = new AudioContext({sampleRate:sampleRate});\r\n      const scriptProcessor = audioContext.createScriptProcessor(bufferSize, 1, 1);\r\n      recordingsourceRecieve = audioContext.createMediaStreamSource(stream);\r\n      recordingsourceRecieve.connect(scriptProcessor);\r\n      scriptProcessor.onaudioprocess = function(e) {\r\n        if(recordingData.length == 0){\r\n          recordingStartTimeRecieve = new Date()\r\n        }\r\n        const input = e.inputBuffer.getChannelData(0);\r\n        const bufferData = new Float32Array(bufferSize);\r\n        for (let i = 0; i < bufferSize; i++) {\r\n          bufferData[i] = input[i];\r\n        }\r\n        recordingDataRecieve.push(bufferData);\r\n      };\r\n      scriptProcessor.connect(audioContext.destination);\r\n    },\r\n    // 録音ダウンロード(発信側)\r\n    downloadRecording(){\r\n      const downloadLink = document.getElementById('download')\r\n      const audioBlob = this.createWAV(recordingData)\r\n      const myURL = window.URL || window.webkitURL;\r\n      downloadLink.href = myURL.createObjectURL(audioBlob);\r\n      downloadLink.download = 'localAuio.wav';\r\n      downloadLink.click();\r\n    },\r\n    createWAV(audioData,stSecond,finSecond) {\r\n      const samples = this.cutSamples(this.mergeBuffers(audioData),stSecond,finSecond)\r\n      const dataview = this.encodeWAV(samples, sampleRate);\r\n      const audioBlob = new Blob([dataview], { type: 'audio/wav' });\r\n      return audioBlob\r\n    },\r\n    // 音声のstreamを可視化する。音を拾えているかの確認用\r\n    drawWave(stream,canvas,localflg) {\r\n      const drawContext = canvas.getContext('2d');\r\n      const audioContext = new AudioContext();\r\n      const analyserNode = audioContext.createAnalyser();\r\n      analyserNode.fftSize = 2048;\r\n      if(localflg){\r\n        localSourceNode = audioContext.createMediaStreamSource(stream);\r\n        localSourceNode.connect(analyserNode);\r\n      }else{\r\n        recieveSourceNode = audioContext.createMediaStreamSource(stream);\r\n        recieveSourceNode.connect(analyserNode);\r\n      }\r\n\r\n      function draw() {\r\n        if(!drawContext) return\r\n        const barWidth = canvas.width / analyserNode.fftSize;\r\n        const array = new Uint8Array(analyserNode.fftSize);\r\n        analyserNode.getByteTimeDomainData(array);\r\n        drawContext.fillStyle = 'rgba(0, 0, 0, 1)';\r\n        drawContext.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        for (let i = 0; i < analyserNode.fftSize; ++i) {\r\n          const value = array[i];\r\n          const percent = value / 255;\r\n          const height = canvas.height * percent;\r\n          const offset = canvas.height - height;\r\n\r\n          drawContext.fillStyle = 'lime';\r\n          drawContext.fillRect(i * barWidth, offset, barWidth, 2);\r\n        }\r\n\r\n        requestAnimationFrame(draw);\r\n      }\r\n      draw();\r\n    },\r\n\r\n    // サポート動作\r\n    // 音声認識の挙動の規定\r\n    setRecognizerOption(recognizer,localflg){\r\n      const _this = this\r\n      recognizer.recognizing = (s, e) => {\r\n        // console.log(`RECOGNIZING: Text=${e.result.text}`);\r\n        _this.writeText(e.result.text,localflg);\r\n      };\r\n      recognizer.recognized = (s, e) => {\r\n        if (e.result.reason == speechSdk.ResultReason.RecognizedSpeech) {\r\n            // console.log(`RECOGNIZED: Text=${e.result.text}`);\r\n            _this.confirmText(e.result.text,localflg)\r\n\r\n            if (_this.vcmdMode) {\r\n              console.log(\"コマンド:\"+e.result.text)\r\n              if(e.result.text.indexOf(\"開発\") > -1){\r\n                window.location.href = '/dev';\r\n              }\r\n            }\r\n        }\r\n        else if (e.result.reason == speechSdk.ResultReason.NoMatch) {\r\n            console.log(\"NOMATCH: Speech could not be recognized.\");\r\n        }\r\n      };\r\n      recognizer.canceled = (s, e) => {\r\n        console.log(`CANCELED: Reason=${e.reason}`);\r\n        // if (e.reason == CancellationReason.Error) {\r\n        //     console.log(`\"CANCELED: ErrorCode=${e.errorCode}`);\r\n        //     console.log(`\"CANCELED: ErrorDetails=${e.errorDetails}`);\r\n        //     console.log(\"CANCELED: Did you update the subscription info?\");\r\n        // }\r\n        recognizer.stopContinuousRecognitionAsync();\r\n      };\r\n      recognizer.sessionStopped = (s, e) => {\r\n        console.log(\"\\n    Session stopped event.\");\r\n        recognizer.stopContinuousRecognitionAsync();\r\n      };\r\n    },\r\n    // wavファイルに変換\r\n    encodeWAV(samples, sampleRate) {\r\n      const buffer = new ArrayBuffer(44 + samples.length * 2);\r\n      const view = new DataView(buffer);\r\n\r\n      const writeString = function(view, offset, string) {\r\n        for (let i = 0; i < string.length; i++){\r\n          view.setUint8(offset + i, string.charCodeAt(i));\r\n        }\r\n      };\r\n\r\n      const floatTo16BitPCM = function(output, offset, input) {\r\n        for (let i = 0; i < input.length; i++, offset += 2){\r\n          const s = Math.max(-1, Math.min(1, input[i]));\r\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n        }\r\n      };\r\n\r\n      writeString(view, 0, 'RIFF');  // RIFFヘッダ\r\n      view.setUint32(4, 32 + samples.length * 2, true); // これ以降のファイルサイズ\r\n      writeString(view, 8, 'WAVE'); // WAVEヘッダ\r\n      writeString(view, 12, 'fmt '); // fmtチャンク\r\n      view.setUint32(16, 16, true); // fmtチャンクのバイト数\r\n      view.setUint16(20, 1, true); // フォーマットID\r\n      view.setUint16(22, 1, true); // チャンネル数\r\n      view.setUint32(24, sampleRate, true); // サンプリングレート\r\n      view.setUint32(28, sampleRate * 2, true); // データ速度\r\n      view.setUint16(32, 2, true); // ブロックサイズ\r\n      view.setUint16(34, 16, true); // サンプルあたりのビット数\r\n      writeString(view, 36, 'data'); // dataチャンク\r\n      view.setUint32(40, samples.length * 2, true); // 波形データのバイト数\r\n      floatTo16BitPCM(view, 44, samples); // 波形データ\r\n\r\n      return view;\r\n    },\r\n    // 溜めたデータを一次元に直す(wav化用)\r\n    mergeBuffers(audioData) {\r\n      let sampleLength = 0;\r\n      for (let i = 0; i < audioData.length; i++) {\r\n        sampleLength += audioData[i].length;\r\n      }\r\n      const samples = new Float32Array(sampleLength);\r\n      let sampleIdx = 0;\r\n      for (let i = 0; i < audioData.length; i++) {\r\n        for (let j = 0; j < audioData[i].length; j++) {\r\n          samples[sampleIdx] = audioData[i][j];\r\n          sampleIdx++;\r\n        }\r\n      }\r\n      return samples;\r\n    },\r\n    // 指定の秒数で切り取る(wav化用)\r\n    cutSamples(samples,stSecond,finSecond){\r\n      if(!stSecond || !finSecond){\r\n        return samples\r\n      }\r\n      const lag = 0\r\n      stSecond = stSecond - lag>0? stSecond - lag :0\r\n      finSecond = finSecond - lag>0? finSecond - lag :finSecond-stSecond\r\n      const st = stSecond * sampleRate\r\n      const fin = finSecond * sampleRate\r\n      let targetSamples = samples.slice(st,fin)\r\n      \r\n      if(targetSamples.length == 0){\r\n        throw 'Error: samples lengh is 0'\r\n      }\r\n      if(targetSamples.length <= 4 * sampleRate){\r\n        // 4秒未満の時は増やす\r\n        const n = Math.ceil(10*sampleRate/targetSamples.length)\r\n        const baseSamples = targetSamples\r\n        targetSamples = new Float32Array(baseSamples.length * n)\r\n        for(let i=0; i < n ;i++){\r\n          targetSamples.set(baseSamples,baseSamples.length*i)\r\n        }\r\n      }else if(targetSamples.length >= 120 * sampleRate){\r\n        // 120秒以上の時は削る\r\n        targetSamples = targetSamples.slice(0,120*sampleRate)\r\n      }\r\n      return targetSamples\r\n    },\r\n    // 一番下までスクロールする\r\n    scroll(){\r\n      const container = this.$el.querySelector(\".b-table-sticky-header\");\r\n      container.scrollTop = container.scrollHeight;\r\n    },\r\n  }\r\n}\r\n\r\n// デバイスとして使えるものの探査\r\n// let audioLists = []\r\n// let videoLists = []\r\n// let audiooutLists = []\r\n\r\n// function getLocalDevices () {\r\n//   navigator.mediaDevices.enumerateDevices()\r\n//     .then(deviceInfos => {\r\n//       const audios = [{ text: '指定なし', value: '' }]\r\n//       const videos = [{ text: '指定なし', value: '' }]\r\n//       const audioouts = [{ text: '指定なし', value: '' }]\r\n//       for (let i = 0; i < deviceInfos.length; i++) {\r\n//         const deviceInfo = deviceInfos[i]\r\n//         if (deviceInfo.kind === 'audioinput') {\r\n//           audios.push({\r\n//             text: deviceInfo.label || `Microphone ${audios.length + 1}`,\r\n//             value: deviceInfo.deviceId\r\n//           })\r\n//         } else if (deviceInfo.kind === 'videoinput') {\r\n//           videos.push({\r\n//             text: deviceInfo.label || `Camera  ${videos.length + 1}`,\r\n//             value: deviceInfo.deviceId\r\n//           })\r\n//         } else if (deviceInfo.kind === 'audiooutput') {\r\n//           audioouts.push({\r\n//             text: deviceInfo.label || `Camera  ${videos.length + 1}`,\r\n//             value: deviceInfo.deviceId\r\n//           })\r\n//         }\r\n//       }\r\n//       audioLists = audios\r\n//       videoLists = videos\r\n//       audiooutLists = audioouts\r\n//     })\r\n// }\r\n\r\n\r\n\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./experiments.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./experiments.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./experiments.html?vue&type=template&id=3fbf34f0&scoped=true&\"\nimport script from \"./experiments.vue?vue&type=script&lang=js&\"\nexport * from \"./experiments.vue?vue&type=script&lang=js&\"\nimport style0 from \"./experiments.scss?vue&type=style&index=0&id=3fbf34f0&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3fbf34f0\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{staticClass:\"dev\",attrs:{\"fluid\":\"\"}},[_c('b-row',{attrs:{\"align-h\":\"between\"}},[_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('div',[_vm._v(\"開発用\")]),(_vm.vcmdMode)?_c('b-icon',{attrs:{\"icon\":\"code-slash\",\"variant\":\"danger\"}}):_vm._e(),(_vm.vcmdMode)?_c('b-icon',{attrs:{\"icon\":\"tools\",\"variant\":\"danger\"}}):_vm._e()],1),_c('b-col',{staticClass:\"text-left\",attrs:{\"cols\":\"3\"}},[(_vm.vcmd)?_c('div',[_vm._v(\"コマンド：\"+_vm._s(_vm.vcmd))]):_vm._e(),(_vm.vcmdMsg)?_c('div',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.vcmdMsg))]):_vm._e()]),_c('b-col',{staticClass:\"text-left\"},[_c('a',{attrs:{\"id\":\"download\"}})]),_c('b-col',[_c('div',{staticClass:\"text-right\"},[_vm._v(\"正答率：\"+_vm._s(_vm.correctRatio)+\"%\")])]),_c('b-col',[_c('div',{staticClass:\"text-right\"},[_vm._v(_vm._s(_vm.startTime))]),_c('div',{staticClass:\"text-right\"},[_vm._v(\"経過時間：\"+_vm._s(_vm.elapsedTime))])])],1),_c('b-table',{attrs:{\"sticky-header\":\"78vh\",\"no-border-collapse\":\"\",\"fixed\":\"\",\"selectable\":\"\",\"select-mode\":\"single\",\"fields\":_vm.tableFields,\"items\":_vm.audioItems},on:{\"row-selected\":_vm.onRowSelected},scopedSlots:_vm._u([{key:\"cell(jaText)\",fn:function(data){return [(data.item.localflg)?_c('div',[_c('div',{staticClass:\"float-right\",staticStyle:{\"margin-left\":\"60%\"}},[_vm._v(_vm._s(data.value))])]):_c('div',[_c('div',{staticClass:\"float-left\",staticStyle:{\"margin-right\":\"60%\"}},[_vm._v(_vm._s(data.value))])])]}},{key:\"cell(localflg)\",fn:function(data){return [(data.item.localflg)?_c('div',[_c('div',{staticClass:\"local-device\"},[_vm._v(_vm._s(data.value))])]):_c('div',[_c('div',{staticClass:\"receive-device\"},[_vm._v(_vm._s(data.value))])])]}},{key:\"cell(correctflg)\",fn:function(data){return [_c('b-form-group',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.item.correctflg),expression:\"data.item.correctflg\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(data.item.correctflg)?_vm._i(data.item.correctflg,null)>-1:(data.item.correctflg)},on:{\"change\":function($event){var $$a=data.item.correctflg,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(data.item, \"correctflg\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(data.item, \"correctflg\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(data.item, \"correctflg\", $$c)}}}})])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template src=\"./dev.html\"></template>\r\n<style src=\"./dev.scss\" scoped lang=\"scss\"></style>\r\n<script>\r\n// tsだと、getUserMediaがコンパイルエラーになるので、jsにする\r\n\r\n// speech to text config\r\nimport * as speechSdk from \"microsoft-cognitiveservices-speech-sdk\";\r\n// const speechSKey = \"5a6a3d13e6a34959bc9e7122a20f52bb\"; // Asahikasei\r\nconst speechSKey = \"55bb3e290b3d4405abdc1e3cae706eab\"; // DX1AG\r\nconst speechConfig = speechSdk.SpeechConfig.fromSubscription(speechSKey, \"japaneast\");\r\nspeechConfig.speechRecognitionLanguage = \"en-us\";\r\n\r\n// 翻訳用config\r\nimport axios from 'axios';\r\nimport {v4 as uuidv4} from 'uuid';\r\nconst transSKey = \"eb87360816204677a17423ccef781f8c\";\r\nconst endpoint = \"https://api.cognitive.microsofttranslator.com/\";\r\nconst location = \"japaneast\";\r\nlet localSourceNode\r\nlet recieveSourceNode\r\nlet localRecognizer\r\nlet recieveRecognizer\r\n\r\n// 音声をwavで録音\r\nlet recordingData = [];\r\nlet recordingStartTime\r\nlet recordingsource\r\nlet recordingDataRecieve = [];\r\nlet recordingStartTimeRecieve\r\nlet recordingsourceRecieve\r\n// bufferSizeを大きくするほどぶつ切り感が出ない\r\nconst bufferSize = 4096;\r\nconst sampleRate = 16000;\r\n\r\n// websocket\r\nconst wsHostName = \"127.0.0.1:8000\";\r\nlet ws;\r\nlet pushStream;\r\n\r\n// 数字の0埋め(2桁)\r\nfunction padding0(num){\r\n  if(num > 10**1){\r\n    return String(num)\r\n  }else{\r\n    return ( '00' + num ).slice( -2 )\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'dev',\r\n  components: {\r\n  },\r\n  props: [],\r\n  data:() => ({\r\n    tableFields:[\r\n      {key: 'localflg',label: 'デバイス',\r\n        thStyle:\"width: 10%;\",\r\n        formatter: value => {\r\n          return value? \"マイク\":\"スピーカー\"\r\n        }\r\n      },\r\n      {key: 'stTime',label: '時間',\r\n        thStyle:\"width: 10%;\",\r\n        formatter: value => {\r\n          return padding0(value.getHours()) + \":\" + padding0(value.getMinutes()) + \":\" + padding0(value.getSeconds())\r\n        }\r\n      },\r\n      {key: 'jaText',label: '本文',\r\n        thStyle:\"width: 50%;\"\r\n      },\r\n      {key: 'enText',label: '翻訳',\r\n        thStyle:\"width: 30%;\"\r\n      },\r\n      {key: 'correctflg',label: '正答',\r\n        thStyle:\"width: 8%;\"\r\n      },\r\n    ],\r\n    audioItems:[],\r\n    selectedAudioItems: [],\r\n    localAudioWriting:false,\r\n    recieveAudioWriting:false,\r\n    vcmdMode:false,\r\n    vcmd:\"\",\r\n    vcmdMsg:\"\"\r\n  }),\r\n  computed: {\r\n    startTime: function(){\r\n      let stTime = new Date()\r\n      if(this.audioItems.length > 0){\r\n        stTime = this.audioItems[0].stTime\r\n      }\r\n      return stTime.getFullYear() + \"/\" + padding0(stTime.getMonth()+1) +\"/\" + padding0(stTime.getDate())\r\n    },\r\n    elapsedTime: function(){\r\n      let ela = \"00:00:00\"\r\n      if(this.audioItems.length > 0){\r\n        const stTime = this.audioItems[0].stTime\r\n        const now = new Date()\r\n        const diff = now.getTime() - stTime.getTime()\r\n        const hour =  Math.floor(diff/(60*60*1000))\r\n        const min = Math.floor(diff/(60*1000) - hour*60)\r\n        const sec = Math.floor(diff/1000 - hour*60*60 - min*60)\r\n        ela = padding0(hour) + \":\" + padding0(min) + \":\" + padding0(sec)\r\n      }\r\n      return ela\r\n    },\r\n    correctRatio: function(){\r\n      if(this.audioItems.length > 0){\r\n        const correct = this.audioItems.filter(item => item.correctflg)\r\n        return correct? correct.length/this.audioItems.length*100 :0\r\n      }\r\n      return 0\r\n    }\r\n  },\r\n  mounted () {\r\n    this.connectWebsocket()\r\n    // getLocalDevices()\r\n    this.connectLocalAudio()\r\n    this.connectRecieveAudio()\r\n    const _this = this\r\n\r\n    window.addEventListener('keydown', function(e) {\r\n      // escキー\r\n      if (!e.repeat && e.key === \"Insert\") {\r\n        _this.vcmdMode = true\r\n      }\r\n    });\r\n    window.addEventListener('keyup', function(e) {\r\n      // escキー\r\n      if (e.key === \"Insert\") {\r\n        _this.vcmdMode = false\r\n      }\r\n    });\r\n  },\r\n  destroyed (){\r\n    this.disconectDevice()\r\n  },\r\n  methods: {\r\n    resetData(){\r\n      recordingData = []\r\n      recordingDataRecieve = []\r\n\r\n      this.audioItems = []\r\n      this.selectedAudioItems = []\r\n      this.localAudioWriting = false\r\n      this.recieveAudioWriting = false\r\n      this.vcmdMode = false\r\n      this.vcmd = \"\"\r\n      this.vcmdMsg = \"\"\r\n    },\r\n    disconectDevice(){\r\n      if(localSourceNode){\r\n        localSourceNode.disconnect()\r\n      }\r\n      if(recieveSourceNode){\r\n        recieveSourceNode.disconnect()\r\n      }\r\n      if(localRecognizer){\r\n        localRecognizer.stopContinuousRecognitionAsync()\r\n      }\r\n      if(recieveRecognizer){\r\n        recieveRecognizer.stopContinuousRecognitionAsync()\r\n      }\r\n      if(recordingsource){\r\n        recordingsource.disconnect()\r\n      }\r\n      if(recordingsourceRecieve){\r\n        recordingsourceRecieve.disconnect()\r\n      }\r\n    },\r\n    // 値書き換え\r\n    writeText(text,localflg){\r\n      if(localflg){\r\n        if(!this.localAudioWriting){\r\n          // 確定直後なので新しく\r\n          this.audioItems.push({jaText:text,enText:\"\",localflg:localflg,stTime:new Date(),finTime:null,correctflg:true})\r\n          this.localAudioWriting = true\r\n        }else{\r\n          // 更新中なので最新を\r\n          const idx = this.audioItems.map(el=>el.localflg).lastIndexOf(localflg)\r\n          this.audioItems[idx].jaText = text\r\n        }\r\n      }else{\r\n        if(!this.recieveAudioWriting){\r\n          // 確定直後なので新しく\r\n          this.audioItems.push({jaText:text,enText:\"\",localflg:localflg,stTime:new Date(),finTime:null,correctflg:true})\r\n          this.recieveAudioWriting = true\r\n        }else{\r\n          // 更新中なので最新を\r\n          const idx = this.audioItems.map(el=>el.localflg).lastIndexOf(localflg)\r\n          this.audioItems[idx].jaText = text\r\n        }\r\n      }\r\n    },\r\n    confirmText(text,localflg){\r\n      const idx = this.audioItems.map(el=>el.localflg).lastIndexOf(localflg)\r\n      this.audioItems[idx].jaText = text\r\n      this.audioItems[idx].finTime = new Date()\r\n      this.translator(text,idx)\r\n      if(localflg){\r\n        this.localAudioWriting = false\r\n      }else{\r\n        this.recieveAudioWriting = false\r\n      }\r\n      // ws.send(JSON.stringify(this.audioItems[idx]))\r\n      this.scroll()\r\n    },\r\n    onRowSelected(items) {\r\n      this.selectedAudioItems = items\r\n    },\r\n    // 動作\r\n    // メイン動作\r\n    // websocketをつなぐ\r\n    connectWebsocket () {\r\n      // 名前を聞く\r\n      // const userName = \"murata\"\r\n      const userId = Date.now()\r\n      ws = new WebSocket(\"ws://\"+wsHostName+\"/ws/\"+userId);\r\n      // websocket受信時\r\n      ws.onmessage = function(event) {\r\n          const data = JSON.parse(event.data)\r\n          const debugpoint = \"ss\"\r\n      };\r\n    },\r\n\r\n    // マイクの音声を拾う\r\n    connectLocalAudio () {\r\n      const _this = this\r\n      // const canvas = document.getElementById(\"localCanvas\")\r\n      const constraints = {\r\n        audio: true,\r\n        video: false\r\n      }\r\n      navigator.mediaDevices.getUserMedia(constraints)\r\n        .then(stream => {\r\n          // 波形描画\r\n          // _this.drawWave(stream.clone(),canvas,true)\r\n          // 音声録音\r\n          _this.startRecording(stream.clone())\r\n          // 音声認識\r\n          const audioConfig = speechSdk.AudioConfig.fromStreamInput(stream);\r\n          // 音をそのままテキスト化\r\n          localRecognizer = new speechSdk.SpeechRecognizer(speechConfig, audioConfig);\r\n          _this.setRecognizerOption(localRecognizer,true);\r\n          localRecognizer.startContinuousRecognitionAsync();\r\n          \r\n        }).catch(error => {\r\n          console.error('mediaDevice.getUserMedia() error:', error)\r\n        })\r\n    },\r\n\r\n    // PC上の音声を拾う\r\n    connectRecieveAudio () {\r\n      const _this = this\r\n      // const canvas = document.getElementById(\"recieveCanvas\")\r\n      const constraints = {\r\n        audio: true,\r\n        video: true\r\n      }\r\n      navigator.mediaDevices.getDisplayMedia(constraints)\r\n        .then(stream => {\r\n          // _this.drawWave(stream.clone(),canvas,false)\r\n          // 音声録音\r\n          _this.startRecordingRecieve(stream.clone())\r\n          const audioConfig = speechSdk.AudioConfig.fromStreamInput(stream);\r\n          recieveRecognizer = new speechSdk.SpeechRecognizer(speechConfig, audioConfig);\r\n          _this.setRecognizerOption(recieveRecognizer,false);\r\n          recieveRecognizer.startContinuousRecognitionAsync();\r\n        }).catch(error => {\r\n          console.error('mediaDevice.getUserMedia() error:', error)\r\n          alert('音声共有を許可した上で、全画面共有してください')\r\n          _this.connectRecieveAudio()\r\n        })\r\n    },\r\n\r\n    // 翻訳\r\n    translator(text,idx){\r\n      const _this = this\r\n      axios({\r\n          baseURL: endpoint,\r\n          url: '/translate',\r\n          method: 'post',\r\n          headers: {\r\n              'Ocp-Apim-Subscription-Key': transSKey,\r\n              'Ocp-Apim-Subscription-Region': location,\r\n              'Content-type': 'application/json',\r\n              'X-ClientTraceId': uuidv4().toString()\r\n          },\r\n          params: {\r\n              'api-version': '3.0',\r\n              'from': 'ja',\r\n              'to': 'en'\r\n          },\r\n          data: [{\r\n              'text': text\r\n          }],\r\n          responseType: 'json'\r\n      }).then(function(response){\r\n          const result = response.data[0].translations[0].text\r\n          if(_this.audioItems[idx]){\r\n            _this.audioItems[idx].enText = result\r\n          }\r\n      })\r\n    },\r\n    // 録音開始\r\n    startRecording(stream){\r\n      recordingData = []\r\n      const audioContext = new AudioContext({sampleRate:sampleRate});\r\n      const scriptProcessor = audioContext.createScriptProcessor(bufferSize, 1, 1);\r\n      recordingsource = audioContext.createMediaStreamSource(stream);\r\n      recordingsource.connect(scriptProcessor);\r\n      scriptProcessor.onaudioprocess = function(e) {\r\n        if(recordingData.length == 0){\r\n          recordingStartTime = new Date()\r\n        }\r\n        const input = e.inputBuffer.getChannelData(0);\r\n        const bufferData = new Float32Array(bufferSize);\r\n        for (let i = 0; i < bufferSize; i++) {\r\n          bufferData[i] = input[i];\r\n        }\r\n        recordingData.push(bufferData);\r\n        // サーバサイドに送る\r\n        ws.send(input.buffer)\r\n      };\r\n      scriptProcessor.connect(audioContext.destination);\r\n    },\r\n    // 録音開始\r\n    startRecordingRecieve(stream){\r\n      recordingDataRecieve = []\r\n      const audioContext = new AudioContext({sampleRate:sampleRate});\r\n      const scriptProcessor = audioContext.createScriptProcessor(bufferSize, 1, 1);\r\n      recordingsourceRecieve = audioContext.createMediaStreamSource(stream);\r\n      recordingsourceRecieve.connect(scriptProcessor);\r\n      scriptProcessor.onaudioprocess = function(e) {\r\n        if(recordingData.length == 0){\r\n          recordingStartTimeRecieve = new Date()\r\n        }\r\n        const input = e.inputBuffer.getChannelData(0);\r\n        const bufferData = new Float32Array(bufferSize);\r\n        for (let i = 0; i < bufferSize; i++) {\r\n          bufferData[i] = input[i];\r\n        }\r\n        recordingDataRecieve.push(bufferData);\r\n      };\r\n      scriptProcessor.connect(audioContext.destination);\r\n    },\r\n    // 録音ダウンロード\r\n    downloadRecording(audioData,stSecond,finSecond,title){\r\n      const downloadLink = document.getElementById('download')\r\n      const audioBlob = this.createWAV(audioData,stSecond,finSecond)\r\n      const myURL = window.URL || window.webkitURL;\r\n      downloadLink.href = myURL.createObjectURL(audioBlob);\r\n      downloadLink.download = title? title+'.wav':'audio.wav';\r\n      downloadLink.click();\r\n    },\r\n    createWAV(audioData,stSecond,finSecond) {\r\n      const samples = this.cutSamples(this.mergeBuffers(audioData),stSecond,finSecond)\r\n      const dataview = this.encodeWAV(samples, sampleRate);\r\n      const audioBlob = new Blob([dataview], { type: 'audio/wav' });\r\n      return audioBlob\r\n    },\r\n    // 音声のstreamを可視化する。音を拾えているかの確認用\r\n    drawWave(stream,canvas,localflg) {\r\n      const drawContext = canvas.getContext('2d');\r\n      const audioContext = new AudioContext();\r\n      const analyserNode = audioContext.createAnalyser();\r\n      analyserNode.fftSize = 2048;\r\n      if(localflg){\r\n        localSourceNode = audioContext.createMediaStreamSource(stream);\r\n        localSourceNode.connect(analyserNode);\r\n      }else{\r\n        recieveSourceNode = audioContext.createMediaStreamSource(stream);\r\n        recieveSourceNode.connect(analyserNode);\r\n      }\r\n\r\n      function draw() {\r\n        if(!drawContext) return\r\n        const barWidth = canvas.width / analyserNode.fftSize;\r\n        const array = new Uint8Array(analyserNode.fftSize);\r\n        analyserNode.getByteTimeDomainData(array);\r\n        drawContext.fillStyle = 'rgba(0, 0, 0, 1)';\r\n        drawContext.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        for (let i = 0; i < analyserNode.fftSize; ++i) {\r\n          const value = array[i];\r\n          const percent = value / 255;\r\n          const height = canvas.height * percent;\r\n          const offset = canvas.height - height;\r\n\r\n          drawContext.fillStyle = 'lime';\r\n          drawContext.fillRect(i * barWidth, offset, barWidth, 2);\r\n        }\r\n\r\n        requestAnimationFrame(draw);\r\n      }\r\n      draw();\r\n    },\r\n\r\n    // csvダウンロード \r\n    // 呼び出し時点の文字起こしをテキストでダウンロード\r\n    csvDownload(){\r\n      if(this.audioItems.length < 1){\r\n        return\r\n      }\r\n      const bom = new Uint8Array([0xEF, 0xBB, 0xBF]);\r\n      let content = '';\r\n      const header = Object.keys(this.audioItems[0])\r\n      content += header.join(\",\")\r\n      this.audioItems.forEach((item)=>{\r\n        content += \"\\r\\n\";\r\n        const cArray =[]\r\n        for (const key of header) {\r\n          cArray.push(item[key])\r\n        }\r\n        \r\n        content += cArray.join(\",\")\r\n      })\r\n      const blob = new Blob([ bom, content ], { \"type\" : \"text/csv\" });\r\n\r\n      const downloadLink = document.getElementById('download')\r\n      downloadLink.href = window.URL.createObjectURL(blob);\r\n      const now = new Date()\r\n      downloadLink.download = \"全文_\"+padding0(now.getMonth()+1)+padding0(now.getDate())+padding0(now.getHours())+padding0(now.getMinutes()) +'.csv';\r\n      downloadLink.click();\r\n    },\r\n    // 音声ダウンロード\r\n    audioDownload(){\r\n      if(this.selectedAudioItems.length < 1){\r\n        this.vcmdMsg = \"列が選択されていません\"\r\n        return\r\n      }\r\n      this.selectedAudioItems.forEach((item)=>{\r\n        // 受信or発信\r\n        const localflg = item.localflg\r\n        // 対象時間\r\n        const audioData = localflg? recordingData : recordingDataRecieve\r\n        const recordingStTime = localflg? recordingStartTime : recordingStartTimeRecieve\r\n        const targetStTime = item.stTime\r\n        const targetFinTime = item.finTime\r\n\r\n        const stDiff = targetStTime.getTime() - recordingStTime.getTime()\r\n        const stSecond = Math.floor(stDiff/1000) - 1\r\n\r\n        const finDiff = targetFinTime.getTime() - recordingStTime.getTime()\r\n        const finSecond = Math.ceil(finDiff/1000) + 1\r\n\r\n        const title = stSecond + \"-\" +finSecond\r\n\r\n        // ダウンロード\r\n        this.downloadRecording(audioData,stSecond,finSecond,title)\r\n      })\r\n    },\r\n\r\n    // サポート動作\r\n    // 音声認識の挙動の規定\r\n    setRecognizerOption(recognizer,localflg){\r\n      const _this = this\r\n      recognizer.recognizing = (s, e) => {\r\n        console.log(e.result.text);\r\n        if(!_this.vcmdMode){\r\n          _this.writeText(e.result.text,localflg);\r\n        }\r\n      };\r\n      recognizer.recognized = (s, e) => {\r\n        console.log(e.result.text);\r\n        if (e.result.reason == speechSdk.ResultReason.RecognizedSpeech) {\r\n          // メイン処理\r\n          if(!_this.vcmdMode){\r\n            _this.confirmText(e.result.text,localflg)\r\n          }\r\n\r\n          // コマンド定義\r\n          if (_this.vcmdMode) {\r\n            const cmd = e.result.text.toLowerCase()\r\n            console.log(\"コマンド:\"+cmd)\r\n            if(cmd.indexOf(\"ホーム\") > -1){\r\n              _this.vcmd = \"ホーム\"\r\n              window.location.href = '/';\r\n            }\r\n            else if(cmd.indexOf(\"リセット\") > -1){\r\n              _this.vcmd = \"リセット\"\r\n              _this.resetData()\r\n            }\r\n            else if(cmd.indexOf(\"csvダウンロード\") > -1){\r\n              _this.vcmd = \"csvダウンロード\"\r\n              _this.csvDownload()\r\n            }\r\n            else if(cmd.indexOf(\"音声ダウンロード\") > -1){\r\n              _this.vcmd = \"音声ダウンロード\"\r\n              _this.audioDownload()\r\n            }\r\n            else{\r\n              const comment = \"コマンドがありません：\"+cmd\r\n              _this.vcmdMsg = comment\r\n            }\r\n          }\r\n        }\r\n        else if (e.result.reason == speechSdk.ResultReason.NoMatch) {\r\n            console.log(\"NOMATCH: Speech could not be recognized.\");\r\n        }\r\n      };\r\n      recognizer.canceled = (s, e) => {\r\n        console.log(`CANCELED: Reason=${e.reason}`);\r\n        // if (e.reason == CancellationReason.Error) {\r\n        //     console.log(`\"CANCELED: ErrorCode=${e.errorCode}`);\r\n        //     console.log(`\"CANCELED: ErrorDetails=${e.errorDetails}`);\r\n        //     console.log(\"CANCELED: Did you update the subscription info?\");\r\n        // }\r\n        recognizer.stopContinuousRecognitionAsync();\r\n      };\r\n      recognizer.sessionStopped = (s, e) => {\r\n        console.log(\"\\n    Session stopped event.\");\r\n        recognizer.stopContinuousRecognitionAsync();\r\n      };\r\n    },\r\n    // wavファイルに変換\r\n    encodeWAV(samples, sampleRate) {\r\n      const buffer = new ArrayBuffer(44 + samples.length * 2);\r\n      const view = new DataView(buffer);\r\n\r\n      const writeString = function(view, offset, string) {\r\n        for (let i = 0; i < string.length; i++){\r\n          view.setUint8(offset + i, string.charCodeAt(i));\r\n        }\r\n      };\r\n\r\n      const floatTo16BitPCM = function(output, offset, input) {\r\n        for (let i = 0; i < input.length; i++, offset += 2){\r\n          const s = Math.max(-1, Math.min(1, input[i]));\r\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n        }\r\n      };\r\n\r\n      writeString(view, 0, 'RIFF');  // RIFFヘッダ\r\n      view.setUint32(4, 32 + samples.length * 2, true); // これ以降のファイルサイズ\r\n      writeString(view, 8, 'WAVE'); // WAVEヘッダ\r\n      writeString(view, 12, 'fmt '); // fmtチャンク\r\n      view.setUint32(16, 16, true); // fmtチャンクのバイト数\r\n      view.setUint16(20, 1, true); // フォーマットID\r\n      view.setUint16(22, 1, true); // チャンネル数\r\n      view.setUint32(24, sampleRate, true); // サンプリングレート\r\n      view.setUint32(28, sampleRate * 2, true); // データ速度\r\n      view.setUint16(32, 2, true); // ブロックサイズ\r\n      view.setUint16(34, 16, true); // サンプルあたりのビット数\r\n      writeString(view, 36, 'data'); // dataチャンク\r\n      view.setUint32(40, samples.length * 2, true); // 波形データのバイト数\r\n      floatTo16BitPCM(view, 44, samples); // 波形データ\r\n\r\n      return view;\r\n    },\r\n    // 溜めたデータを一次元に直す(wav化用)\r\n    mergeBuffers(audioData) {\r\n      let sampleLength = 0;\r\n      for (let i = 0; i < audioData.length; i++) {\r\n        sampleLength += audioData[i].length;\r\n      }\r\n      const samples = new Float32Array(sampleLength);\r\n      let sampleIdx = 0;\r\n      for (let i = 0; i < audioData.length; i++) {\r\n        for (let j = 0; j < audioData[i].length; j++) {\r\n          samples[sampleIdx] = audioData[i][j];\r\n          sampleIdx++;\r\n        }\r\n      }\r\n      return samples;\r\n    },\r\n    // 指定の秒数で切り取る(wav化用)\r\n    cutSamples(samples,stSecond,finSecond){\r\n      if(!stSecond || !finSecond){\r\n        return samples\r\n      }\r\n      const lag = 0\r\n      stSecond = stSecond - lag>0? stSecond - lag :0\r\n      finSecond = finSecond - lag>0? finSecond - lag :finSecond-stSecond\r\n      const st = stSecond * sampleRate\r\n      const fin = finSecond * sampleRate\r\n      const targetSamples = samples.slice(st,fin)\r\n      \r\n      if(targetSamples.length == 0){\r\n        throw 'Error: samples lengh is 0'\r\n      }\r\n      // if(targetSamples.length <= 4 * sampleRate){\r\n      //   // 4秒未満の時は増やす\r\n      //   const n = Math.ceil(10*sampleRate/targetSamples.length)\r\n      //   const baseSamples = targetSamples\r\n      //   targetSamples = new Float32Array(baseSamples.length * n)\r\n      //   for(let i=0; i < n ;i++){\r\n      //     targetSamples.set(baseSamples,baseSamples.length*i)\r\n      //   }\r\n      // }else if(targetSamples.length >= 120 * sampleRate){\r\n      //   // 120秒以上の時は削る\r\n      //   targetSamples = targetSamples.slice(0,120*sampleRate)\r\n      // }\r\n      return targetSamples\r\n    },\r\n    // 一番下までスクロールする\r\n    scroll(){\r\n      const container = this.$el.querySelector(\".b-table-sticky-header\");\r\n      container.scrollTop = container.scrollHeight;\r\n    },\r\n  }\r\n}\r\n\r\n// デバイスとして使えるものの探査\r\n// let audioLists = []\r\n// let videoLists = []\r\n// let audiooutLists = []\r\n\r\n// function getLocalDevices () {\r\n//   navigator.mediaDevices.enumerateDevices()\r\n//     .then(deviceInfos => {\r\n//       const audios = [{ text: '指定なし', value: '' }]\r\n//       const videos = [{ text: '指定なし', value: '' }]\r\n//       const audioouts = [{ text: '指定なし', value: '' }]\r\n//       for (let i = 0; i < deviceInfos.length; i++) {\r\n//         const deviceInfo = deviceInfos[i]\r\n//         if (deviceInfo.kind === 'audioinput') {\r\n//           audios.push({\r\n//             text: deviceInfo.label || `Microphone ${audios.length + 1}`,\r\n//             value: deviceInfo.deviceId\r\n//           })\r\n//         } else if (deviceInfo.kind === 'videoinput') {\r\n//           videos.push({\r\n//             text: deviceInfo.label || `Camera  ${videos.length + 1}`,\r\n//             value: deviceInfo.deviceId\r\n//           })\r\n//         } else if (deviceInfo.kind === 'audiooutput') {\r\n//           audioouts.push({\r\n//             text: deviceInfo.label || `Camera  ${videos.length + 1}`,\r\n//             value: deviceInfo.deviceId\r\n//           })\r\n//         }\r\n//       }\r\n//       audioLists = audios\r\n//       videoLists = videos\r\n//       audiooutLists = audioouts\r\n//     })\r\n// }\r\n\r\n\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dev.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dev.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dev.html?vue&type=template&id=8df0c94a&scoped=true&\"\nimport script from \"./dev.vue?vue&type=script&lang=js&\"\nexport * from \"./dev.vue?vue&type=script&lang=js&\"\nimport style0 from \"./dev.scss?vue&type=style&index=0&id=8df0c94a&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8df0c94a\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport VueRouter, { RouteConfig } from 'vue-router'\r\nimport experiments from '../views/experiments.vue'\r\nimport dev from '../views/dev/dev.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes: Array<RouteConfig> = [\r\n  {\r\n    path: '/',\r\n    name: 'experiments',\r\n    component: experiments\r\n  },\r\n  {\r\n    path: '/dev',\r\n    name: 'dev',\r\n    component: dev\r\n  },\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\nexport default router\r\n","import '@babel/polyfill'\r\nimport 'mutationobserver-shim'\r\nimport Vue from 'vue'\r\nimport './plugins/bootstrap-vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport {BootstrapVueIcons } from 'bootstrap-vue'\r\n\r\nVue.use(BootstrapVueIcons)\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./dev.scss?vue&type=style&index=0&id=8df0c94a&scoped=true&lang=scss&\""],"sourceRoot":""}